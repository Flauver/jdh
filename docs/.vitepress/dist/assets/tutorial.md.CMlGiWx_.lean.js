import{_ as e,c as t,a3 as l,o as i}from"./chunks/framework.DbwnVzUw.js";const m=JSON.parse('{"title":"教程","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial.md","filePath":"tutorial.md"}'),r={name:"tutorial.md"};function o(n,a,h,d,s,c){return i(),t("div",null,a[0]||(a[0]=[l('<h1 id="教程" tabindex="-1">教程 <a class="header-anchor" href="#教程" aria-label="Permalink to &quot;教程&quot;">​</a></h1><h2 id="入门" tabindex="-1">入门 <a class="header-anchor" href="#入门" aria-label="Permalink to &quot;入门&quot;">​</a></h2><h3 id="观前提醒" tabindex="-1">观前提醒 <a class="header-anchor" href="#观前提醒" aria-label="Permalink to &quot;观前提醒&quot;">​</a></h3><p>本教程面向已经学会小鹤音形的人</p><h3 id="简单鹤与小鹤音形的区别" tabindex="-1">简单鹤与小鹤音形的区别 <a class="header-anchor" href="#简单鹤与小鹤音形的区别" aria-label="Permalink to &quot;简单鹤与小鹤音形的区别&quot;">​</a></h3><ol><li>简单鹤字根为乱序排列，非音托字根</li><li>没有小字</li><li>拆分规则不同</li><li>简单鹤四码单字统一放在次选。简单鹤采用了极端的字词避重方式，在算码的时候尽量让更多的字处在三码位，剩下的四码单字则全部放在次选，好让四码首选永远可以畅快打词</li><li>出简也出全，且不会让位给其他的字</li></ol><h3 id="简单鹤拆分规则" tabindex="-1">简单鹤拆分规则 <a class="header-anchor" href="#简单鹤拆分规则" aria-label="Permalink to &quot;简单鹤拆分规则&quot;">​</a></h3><p>首末取大，相交也拆，插隔也取，字根字重复 例如：由 = 日 + 丨， 平 = 干 + 八， 虫 = 虫 + 虫</p><h3 id="入门步骤" tabindex="-1">入门步骤 <a class="header-anchor" href="#入门步骤" aria-label="Permalink to &quot;入门步骤&quot;">​</a></h3><ol><li>使用字根练习器练习简单鹤字根</li><li>找到简单鹤QQ群并加入</li><li>打文章练习</li></ol>',10)]))}const p=e(r,[["render",o]]);export{m as __pageData,p as default};
